.root {
	font-family: monospace;
	font-size: 1rem;
}

.form {
	width: 100%;
}

.row {
	width: 100%;
	display: flex;
	flex-direction: row;
	align-items: center;
	--indent-depth: 0.5rem;
}

.name {
	color: var(--color-element-text);
	line-height: 1;
	white-space: nowrap;
	flex: 0 0 auto;
}

.name::after {
	content: ":";
	color: var(--color-props-sep);
}

.nameStatic {
	padding: 0.2em 0 0.2em 0.2em;
	display: inline-block;
	line-height: 1.4;
}

.nameInput {
	border: none;
	background: transparent;
	padding: 0.2em 0 0.2em 0.2em;
	outline: none;
	color: inherit;
}

.nameInput:focus {
	background: var(--color-props-input-bg);
}

.property {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
	display: flex;
	align-items: center;
	padding-left: 0.25rem;
	width: 100%;
	position: relative;
}

.noCollapse {
	padding-left: 1.25rem;
}

.toggle {
	background: none;
	border: none;
	display: flex;
	justify-content: center;
	align-items: center;
	width: 1.25rem;
	height: 100%;
	padding: 0.2em 0.13em;
	cursor: pointer;
	color: #aaa;
}

.valueWrapper {
	display: flex;
	justify-content: flex-end;
	min-width: 100%;
}

.check {
	cursor: pointer;
}

.withCheck .valueInput {
	color: transparent;
}

.withCheck:focus-within .valueInput {
	color: inherit;
}

.valueInput {
	font-family: monospace;
	background: none;
	border: none;
	line-height: 1;
	z-index: 20;
	color: inherit;
	flex: 1;
	padding-right: 0.2em;
	min-width: 0;
}

.innerWrapper {
	min-width: 0;
	flex: 1;
	display: flex;
}

.innerWrapper:focus-within .valueInput {
	background: var(--color-props-input-bg);
	outline: none;
}

.innerWrapper:focus-within .undoBtn {
	display: block;
}

.undoBtn {
	display: none;
	background: none;
	border: none;
	background: none;
	cursor: pointer;
	outline: none;
	padding: 0 0.75rem;
	opacity: 0;
	transition: all 0.2s;
	visibility: hidden;
}

.showUndoBtn {
	visibility: visible;
	opacity: 1;
}

.undoBtn:hover {
	color: var(--color-button-active);
}

.undoBtn:focus {
	color: var(--color-button-active);
}

.mask {
	position: relative;
}

.string {
	color: var(--color-props-string);
}

.function {
	color: var(--color-props-function);
}

.number {
	color: var(--color-props-number);
}

.boolean {
	color: var(--color-props-boolean);
}

.array {
	color: var(--color-props-array);
}

.object {
	color: var(--color-props-object);
}

.null {
	color: var(--color-props-null);
}
